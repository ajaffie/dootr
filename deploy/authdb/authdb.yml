apiVersion: v1
kind: Service
metadata:
  name: authdb
  labels:
    app: auth
spec:
  ports:
  - port: 3306
  selector:
    app: auth
    tier: authdb
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: authdb-data
  labels:
    app: auth
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authdb
  labels:
    app: auth
spec:
  selector:
    matchLabels:
      app: auth
      tier: authdb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: auth
        tier: authdb
    spec:
      initContainers:
        - name: volume-permissions
          image: bitnami/minideb:stretch
          imagePullPolicy: IfNotPresent
          command: ["chown", "-R", "1001:1001", "/bitnami/mariadb"]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: authdb-persistent-storage
              mountPath: /bitnami/mariadb
      containers:
      - image: bitnami/mariadb:10.3
        name: authdb
        resources:
          requests:
            cpu: "1000m"
            memory: 2Gi
        env:
        - name: MARIADB_DATABASE
          value: dootr.auth
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: authdb-creds
              key: root
        - name: MARIADB_USER
          valueFrom:
            secretKeyRef:
              name: authdb-creds
              key: username
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: authdb-creds
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: authdb-persistent-storage
          mountPath: /bitnami/mariadb
      volumes:
      - name: authdb-persistent-storage
        persistentVolumeClaim:
          claimName: authdb-data